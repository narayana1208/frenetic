(* Multi-switch programming *)

let h1 = 00:00:00:00:00:01 in
let h2 = 00:00:00:00:00:02 in
let h3 = 00:00:00:00:00:03 in
let h4 = 00:00:00:00:00:04 in

let switch_map = fun (h4_port : port, h3_port : port, h2_port : port, h1_port : port) : pol ->

  let fwd_cond = fun (dst : macAddr, out_port : port) : pol ->
        ethDst = dst; port := out_port

  in

  fwd_cond (h4, h4_port) + 
  fwd_cond (h3, h3_port) +
  fwd_cond (h2, h2_port) +
  fwd_cond (h1, h1_port) +
  drop

in

let switch1_pol = switch_map (2,2,1,1) in
let switch2_pol = switch_map (3,3,2,1) in
let switch3_pol = switch_map (2,1,3,3) in 

let forwarding = 
  if switch = 1 then switch1_pol
  else if switch = 2 then switch2_pol
  else switch3_pol

in 


let isHttp = 
  fun (h1 : macAddr, h2 : macAddr) : pred ->
   ((ethSrc = h1 && ethDst = h2 && tcpDstPort = 80) ||
    (ethSrc = h2 && ethDst = h1 && tcpSrcPort = 80))
in

let FilterHttpTraffic =
  fun (h1 : macAddr, h2 : macAddr) : pol ->
    if (isHttp (h1, h2))
    then pass
    else drop

in

let firewall = FilterHttpTraffic (h1, h2) 

in

firewall; forwarding
